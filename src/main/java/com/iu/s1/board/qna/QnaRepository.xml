<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
 <mapper namespace="com.iu.s1.board.qna.QnaRepository">
 	<insert id="setInsert" parameterType="QnaVO" useGeneratedKeys="true" keyProperty="num">
 		insert into qna values(#{num}, #{title}, #{writer}, #{contents}, now(), 0, (select ref from (select max(num) as ref from qna) N)+1 , 0, 0)
 	</insert>	
 	
 	<select id="getSelectOne" parameterType="QnaVO" resultType="QnaVO">
 		select * from qna where num=#{num}
 	</select>
 		
 	<sql id="search"> 
		like concat('%', #{search}, '%')
	</sql>
 		
 	<select id="getSelectList" parameterType="Pager" resultType="QnaVO">
 		select * from qna where
 		<choose>
			<when test="kind == 'bc'">
				contents
			</when>
			<when test="kind == 'bt'">
				title			
			</when>
			<otherwise>
				writer
			</otherwise>
		
		</choose>
		<include refid="search"></include> 
 		order by ref desc, step asc limit #{startRow}, 10;
 	</select>
 	
 	<select id="boardCount" parameterType="Pager" resultType="java.lang.Long">
		select count(num) from qna 
		<where>
			<if test="kind == 'bt'">
				title <include refid="search"></include>
			</if>
			
			<if test="kind == 'bw'">
				writer <include refid="search"></include>
			</if>
			
			<if test="kind == 'bc'">
				contents <include refid="search"></include>
			</if>
		</where>
	</select>
	
	<insert id="boardReply" parameterType="QnaVO">
		insert into qna (title, writer, contents, regDate, hit, ref, step, depth) 
		values(#{title}, #{writer}, #{contents}, now(), 0, (select ref from ((select ref from qna where num=#{num})) R), (select step from ((select step from qna where num=#{num})) S)+1, (select depth from ((select depth from qna where num=#{num})) D)+1)
	</insert>
	
	<update id="boardReplyUpdate" parameterType="QnaVO">
		update qna set step=step+1 where ref = (select ref from ((select ref from qna where num=#{num})) R) and step > (select step from ((select step from qna where num=#{num})) S)
	</update>
	
	<update id="setUpdate" parameterType="QnaVO">
		update qna set title=#{title}, writer=#{writer}, contents=#{contents} where num = #{num} 
	</update>
	
	<delete id="setDelete" parameterType="QnaVO">
		delete from qna where num = #{num}
	</delete>
	
	
 </mapper>